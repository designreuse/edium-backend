version: '3'
services:
  mariadb:
    image: mariadb:10.3
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: 3141592653a@
      MYSQL_DATABASE: dolphin
      MYSQL_USER: dolphin
      MYSQL_PASSWORD: dolphinX2018
    ports:
      - "3306:3306"
#    logging:
#      driver: syslog
#      options:
#        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
#    networks:
#    - backend
    restart: on-failure
    volumes:
    - ${PWD}/mariadb:/var/lib/mysql
    - ./database:/tmp/database
    command: mysqld --init-file="/tmp/database/install_db.sql"

  vault:
    image: vault
    container_name: vault
    cap_add:
    - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 934f9eae-31ff-a8ef-e1ca-4bea9e07aa09
    ports:
    - 8200:8200

#  setup-vault:
#    image: vault
#    container_name: setup-vault
#    entrypoint: /bin/sh
#    volumes:
#    - './config:/config'
#    environment:
#      VAULT_ADDR: 'http://vault:8200'
#      CONFIG_DIR: '/config'
#    command: >
#      -c "
#      sleep 2;
#      /config/vault-init.sh;
#      "
#    depends_on:
#    - vault

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mariadb
      - MYSQL_USER=dolphin
      - MYSQL_PASS=dolphinX2018
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG -Dlogging.level.zipkin2=DEBUG
    depends_on:
      - mariadb
    ports:
    # Port used for the Zipkin UI and HTTP Api
    - 9411:9411

  config-server:
    container_name: config-server
    build: ./config-server
    image: edium/config-server:latest
    environment:
    - SPRING_PROFILES_ACTIVE=docker
    ports:
    - "9999:9999"
    - "18787:8787"
#    depends_on:
#    - rabbitmq

  service-registry:
    container_name: service-registry
    build: ./service-registry
    image: edium/service-registry:latest
    environment:
    - SPRING_PROFILES_ACTIVE=dev
    ports:
    - "8761:8761"
    - "28787:8787"
#    depends_on:
#    - config-server

#  hystrix-dashboard:
#    container_name: hystrix-dashboard
#    build: ./hystrix-dashboard
#    ports:
#    - "8788:8788"
#    - "38787:8787"

  auth-service:
    container_name: auth-service
    build: ./auth-service
    image: edium/auth-service:latest
    environment:
    - SPRING_PROFILES_ACTIVE=docker
    ports:
    - "8088:8088"
    - "29797:8787"
    depends_on:
    - config-server
    - mariadb
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 9999 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done;
      java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar /app.jar

  core-service:
    container_name: core-service
    build: ./core-service
    image: edium/core-service:latest
    environment:
    - SPRING_PROFILES_ACTIVE=docker
    ports:
    - "8081:8081"
    - "19797:8787"
    depends_on:
    - config-server
    - mariadb
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 9999 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done;
      java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar /app.jar
      "

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    image: edium/api-gateway:latest
    environment:
    - SPRING_PROFILES_ACTIVE=docker
    ports:
    - "8888:8888"
    - "49797:8787"
    depends_on:
    - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 9999 && nc -z vault 8200); do sleep 5; echo 'Waiting for vault and config-server services to start-up...'; done;
      java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8787,suspend=n -jar /app.jar
      "